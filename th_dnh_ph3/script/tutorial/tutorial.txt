#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["First Script"]
#Text["Code by Cyvo[r]First Bullet"]
//#BGM["./PaRappa the Rapper 2- Toasty Buns.mp3"] 
#include "script/default_system/Default_ShotConst.txt"

let objBoss;
let objScene= GetEnemyBossSceneObjectID();


@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){
        SetScriptResult(500);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
    
}

@Initialize{
    objBoss= ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);
    
    ObjEnemyBossScene_StartSpell(objScene);
    
    TDrawLoop;
    TFinalize;
    MainTask;
}

@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}

task TFinalize{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));    
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}

task MainTask{
    wait(120);
    movement;
    //fireA;
    //fireB;
    //fireC;
    fireD;
}

task TDrawLoop{
    let imgExBoss= GetCurrentScriptDirectory() ~ "Enemy.png";
    ObjPrim_SetTexture(objBoss, imgExBoss);
    ObjSprite2D_SetSourceRect(objBoss, 64, 1, 127, 64);
    ObjSprite2D_SetDestCenter(objBoss);
}

task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        ObjMove_SetDestAtFrame(objBoss, rand(GetCenterX() + 90, GetCenterX() - 90), rand(GetCenterY() - 60, GetCenterY()-120), 60);
        wait(240);
    }
}

task fireA{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){
        loop(15){
            let obj = CreateShotA2(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 3, GetAngleToPlayer(objBoss), -0.05, 0, 1, 0);
            BulletCommands(obj);
        }
        wait(60);
    }
}

task fireB{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        let angleT=GetAngleToPlayer(objBoss);
        CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 3, angleT, 57, 5);
        wait(10);
    }
}

task fireC{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){
        ascent(i in 0..12){
            SpawnNDLaser(i);
        }
        wait(20);
    }
}

task fireD{
        ascent(i in 0..12){
                let obj = CreateCurveLaserA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 4, 
                GetAngleToPlayer(objBoss) + i*360/12, 60, 18, 9, 10);
                SnakePattern(obj, 1);
            }
        wait(60);
        ascent(i in 0..12){
                let obj = CreateCurveLaserA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 4, 
                GetAngleToPlayer(objBoss) + i*360/12, 60, 18, 54, 10);
                SnakePattern(obj, -1);
        }
}

task SnakePattern(obj, dir){
    let wvel =1 * dir;
    ascent(i in 0..12){
        ObjMove_AddPatternA2(obj, i*30, 4, NO_CHANGE, NO_CHANGE, wvel, 5);
        wvel *=-1;
    }
}

task BulletCommands(obj){
    while(ObjMove_GetSpeed(obj) >0){yield;}
    wait(30);
    let angleT = rand(0,360);
    loop(12){
        CreateShotA1(ObjMove_GetX(obj), ObjMove_GetY(obj), 2, angleT, 162, 0);
        angleT += 360/5;
    }
    Obj_Delete(obj);
}

task SpawnNDLaser(ID){
    let objcount =0;
    let obj = CreateStraightLaserA1(ObjMove_GetX(objBoss) + 60*cos(ID*30), ObjMove_GetY(objBoss) + 60*sin(ID*30), ID*30, 512, 24, 300, 153, 60);
    while(!Obj_IsDeleted(obj)){
        ObjMove_SetPosition(obj, ObjMove_GetX(objBoss) + 60*cos(ID*30 + objcount), ObjMove_GetY(objBoss) + 60*sin(ID*30 + objcount));
        ObjStLaser_SetAngle(obj, ID*30 + objcount);
        objcount++;
        yield;
    }
}

function GetCenterX(){
    return GetStgFrameWidth() / 2;
}
function GetCenterY(){
    return GetStgFrameHeight() / 2;
}
function wait(n){
    loop(n){yield;}
}