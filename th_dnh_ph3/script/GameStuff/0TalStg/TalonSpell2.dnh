#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Talon Phase 3 Spell"]
#Text["Code by Cyvo[r]Talon boss phase 3 spell"]
#include "script/default_system/Default_ShotConst.txt"
#include "./../lib/lib_general.dnh"
#Background["./../../tutorial/system/Default_Background_IceMountain.txt"]
#System["./../../tutorial/system/Default_System.txt"]

let objBoss;
let objScene= GetEnemyBossSceneObjectID();


@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){
        SetScriptResult(2000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
    
}

@Initialize{
    objBoss= ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);
    SetPauseScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_Pause.txt");
    SetEndSceneScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_EndScene.txt");
    SetReplaySaveSceneScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_ReplaySaveScene.txt");
    
    ObjEnemyBossScene_StartSpell(objScene);
    
    TDrawLoop;
    TFinalize;
    MainTask;
}

@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}

task TFinalize{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){yield;}
    if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
            +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
        AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));    
    }
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}

task MainTask{
    wait(120);
    movement;
    fallCeil;
    explodeSides;
}

task fallCeil{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){
        let randX= rand(0, GetStgFrameWidth());
        CreateShotA2(randX, 0, 1, 90, rand(0.05, 0.2), 3, 163, 5);
        wait(10);
    }
}

task explodeSides{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){
        let randArr= [0, GetStgFrameWidth()][rand_int(0,1)];
        let randY= rand(0, GetStgFrameHeight());
        let angleT = rand(0, 360);
        loop(10){
            CreateShotA1(randArr, randY, 2, angleT, 162, 5);
            angleT += 360/10;
        }
        ScreenShake(10, 10);
        wait(60);
    }
}

task ScreenShake(frames, intensity){
    while(frames > 0){
        Set2DCameraFocusX(GetStgFrameWidth/2 + rand(-intensity, intensity));
        Set2DCameraFocusY(GetStgFrameHeight/2 + rand(-intensity, intensity));
        frames--;
        yield;
    }
    Set2DCameraFocusX(GetStgFrameWidth/2);
    Set2DCameraFocusY(GetStgFrameHeight/2);
    yield;
}

task TDrawLoop{
    let BossImage = GetCurrentScriptDirectory() ~ "./../img/u2l13spritesheet.png"; //assumes that image is in same directory
    let animframe = 0;
    ObjPrim_SetTexture(objBoss, BossImage);
    ObjRender_SetScaleXYZ(objBoss, 1, 1, 1);
    ObjSprite2D_SetSourceRect(objBoss, 0, 0, 64, 64);
    ObjSprite2D_SetDestCenter(objBoss);
    while(!Obj_IsDeleted(objBoss)){
        ObjSprite2D_SetSourceRect(objBoss, 0 + 64*floor(animframe/8), 0, 64 + 64*floor(animframe/8), 64);
        animframe++;
        if(animframe >= 32){animframe = 0;}//reset if too high
        yield;
    }
}

task movement{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0){
        ObjMove_SetDestAtFrame(objBoss, rand(GetCenterX() + 90, GetCenterX() - 90), 45, 60);
        wait(120);
    }
}