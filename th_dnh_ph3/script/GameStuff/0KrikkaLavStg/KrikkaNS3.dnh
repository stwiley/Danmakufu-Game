#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Krikka Non-Spell 3 Single"]
#Text["Code by Cyvo[r]Krikka Non-Spell 3"]
#include "script/default_system/Default_ShotConst.txt"
#include "./../lib/lib_general.dnh"
#Background["./../../tutorial/system/Default_Background_IceMountain.txt"]
#System["./../../tutorial/system/Default_System.txt"]


let objBoss;
let objScene= GetEnemyBossSceneObjectID();


@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){
        SetScriptResult(1000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
    
}

@Initialize{
    objBoss= ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);
    SetPauseScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_Pause.txt");
    SetEndSceneScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_EndScene.txt");
    SetReplaySaveSceneScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_ReplaySaveScene.txt");
    
    //ObjEnemyBossScene_StartSpell(objScene);
    
    TDrawLoop;
    TFinalize;
    MainTask;
}

@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}

task TFinalize{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){yield;}
    NotifyEventAll(EV_USER_STAGE+2, [ObjMove_GetX(objBoss), ObjMove_GetY(objBoss)]);
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}

task MainTask{
    wait(120);
	radial;
}

task radial{
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){
		let angleT = 0;
		loop(10){
			let charge= CreateShotA2(ObjMove_GetX(objBoss) + 60*cos(angleT), ObjMove_GetY(objBoss) + 60*sin(angleT), 0, angleT, 0.01, 2, 9, 10);
			angleT += 360/10;
            burstRadial(charge);
		}
		wait(90);
	}
}

task burstRadial(charge){
    while(ObjMove_GetSpeed(charge) >0){yield;}
    wait(rand(100, 200));
    let angleT = rand(0, 360);
    loop(10){
        CreateShotA2(ObjMove_GetX(charge), ObjMove_GetY(charge), -1, angleT, 0.01, 2, 145, 0);
        angleT += 360/10;
    }
}

task TDrawLoop{
    let BossImage = GetCurrentScriptDirectory() ~ "./../img/u2l13spritesheet.png"; //assumes that image is in same directory
    let animframe = 0;
    ObjPrim_SetTexture(objBoss, BossImage);
    ObjRender_SetScaleXYZ(objBoss, 1, 1, 1);
    ObjSprite2D_SetSourceRect(objBoss, 0, 0, 64, 64);
    ObjSprite2D_SetDestCenter(objBoss);
    while(!Obj_IsDeleted(objBoss)){
        ObjSprite2D_SetSourceRect(objBoss, 0 + 64*floor(animframe/8), 0, 64 + 64*floor(animframe/8), 64);
        animframe++;
        if(animframe >= 32){animframe = 0;}//reset if too high
        yield;
    }
}