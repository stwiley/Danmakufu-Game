#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Midas Non-Spell 3 Single"]
#Text["Code by Cyvo[r]Midas Non-Spell 3"]
#include "script/default_system/Default_ShotConst.txt"
#include "./../lib/lib_general.dnh"
#Background["./../system/Default_Background_IceMountain.txt"]
#System["./../system/Default_System.txt"]


let objBoss;
let objScene= GetEnemyBossSceneObjectID();


@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){
        SetScriptResult(1000);
    }
    case(EV_REQUEST_TIMER){
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(1000000);
    }
    
}

@Initialize{
    objBoss= ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 60, 60);
    SetPauseScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_Pause.txt");
    SetEndSceneScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_EndScene.txt");
    SetReplaySaveSceneScriptPath(GetCurrentScriptDirectory() ~ "./../system/Default_ReplaySaveScene.txt");
    
    ObjEnemyBossScene_StartSpell(objScene);
    
    TDrawLoop;
    TFinalize;
    MainTask;
}

@MainLoop{
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    yield;
}

task TFinalize{
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){yield;}
    NotifyEventAll(EV_USER_STAGE+2, [ObjMove_GetX(objBoss), ObjMove_GetY(objBoss)]);
    Obj_Delete(objBoss);
    DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}

task MainTask{
    wait(120);
    movement;
    ascent(i in 0..6){
        midasFamiliar(i, 6, 1, 48);
    }
}

task midasFamiliar(ID, num, dir, rad){
    let objcount =0;
    let angleO = ID*360/num;
    let graphic = GetCurrentScriptDirectory() ~ "./../stgenemy/enemy.png";
    let obj = ObjPrim_Create(OBJ_SPRITE_2D);
    ObjPrim_SetTexture(obj, graphic);
    ObjSprite2D_SetSourceRect(obj, 0, 0, 64, 64);
    ObjSprite2D_SetDestCenter(obj);
    ObjRender_SetBlendType(obj, BLEND_ADD_ARGB);
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){
        angleO = ID*360/num + objcount*dir;
        ObjRender_SetPosition(obj, ObjMove_GetX(objBoss) + rad*cos(angleO), 
                                   ObjMove_GetY(objBoss) + rad*sin(angleO), 1);
        ObjMove_SetAngle(obj, angleO);

        if(objcount % 12 == 0){
            let currx = ObjRender_GetX(obj);
            let curry = ObjRender_GetY(obj);
            ascent(i in 0..3){
                CreateShotA1(currx, curry, 1, angleO + 180 + i*120, 17, 0);
            }
        }
        objcount++;
        yield;
    }
    Obj_Delete(obj);
}

task TDrawLoop{
    let BossImage = GetCurrentScriptDirectory() ~ "./../img/midasplace.png"; //assumes that image is in same directory
    //let animframe = 0;
    ObjPrim_SetTexture(objBoss, BossImage);
    ObjRender_SetScaleXYZ(objBoss, 1, 1, 1);
    ObjSprite2D_SetSourceRect(objBoss, 0, 0, 64, 64);
    ObjSprite2D_SetDestCenter(objBoss);
    /*while(!Obj_IsDeleted(objBoss)){
        ObjSprite2D_SetSourceRect(objBoss, 0 + 64*floor(animframe/8), 0, 64 + 64*floor(animframe/8), 64);
        animframe++;
        if(animframe >= 32){animframe = 0;}//reset if too high
        yield;
    }*/
}

task movement{
    wait(60);
    while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) >0){
        ObjMove_SetDestAtFrame(objBoss, rand(GetCenterX() + 90, GetCenterX()-90), 60, 60);
        wait(120);
    }
}